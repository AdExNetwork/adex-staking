{"version":3,"sources":["adex-staking.svg","themeMUi.js","abi/Staking.js","abi/ERC20.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","palette","primary","main","contrastText","accentOne","accentTwo","grey","error","deepOrange","warning","amber","first","lime","contrastThreshold","tonalOffset","text","theme","createMuiTheme","typography","fontFamily","fontSize","overrides","MuiButton","root","borderRadius","outlined","MuiTableCell","head","whiteSpace","MuiPaper","rounded","MuiTooltip","tooltip","themeMUI","responsiveFontSizes","options","factor","StakingABI","inputs","internalType","name","type","payable","stateMutability","anonymous","indexed","constant","components","outputs","ERC20ABI","ADDR_ADX","ADDR_STAKING","ADX_MULTIPLIER","REFRESH_INTVL","provider","getDefaultProvider","Staking","Contract","Token","PRICES_API_URL","UNBOND_DAYS","POOLS","label","id","selectable","ZERO","bigNumberify","DEFAULT_BOND","poolId","amount","EMPTY_STATS","loaded","userBonds","userBalance","totalStake","StatsCard","title","subtitle","extra","Paper","elevation","style","margin","spacing","padding","minHeight","Typography","variant","color","LinearProgress","Dashboard","stats","onRequestUnbond","onUnbond","userTotalStake","filter","x","status","map","reduce","a","b","add","useState","prices","setPrices","useEffect","fetch","then","r","json","catch","console","inUSD","adxAmount","USD","usdAmount","toNumber","toFixed","headerCellStyle","fontWeight","Grid","container","maxWidth","item","xs","formatADX","TableContainer","Table","aria-label","marginTop","TableHead","TableRow","TableCell","align","TableBody","bond","pool","find","poolLabel","key","getBondId","willUnlock","getTime","now","Date","days","Math","ceil","bondStatus","Button","onClick","disabled","num","owner","nonce","keccak256","defaultAbiCoder","encode","loadUserStats","async","window","web3","Web3Provider","currentProvider","signer","getSigner","getAddress","addr","Promise","all","balanceOf","getLogs","fromBlock","address","topics","hexZeroPad","bal","logs","bonds","log","topic","evs","interface","events","LogBond","vals","parseLog","values","push","LogUnbondRequested","bondId","LogUnbonded","Boolean","location","hostname","match","ReactDOM","render","isNewBondOpen","setNewBondOpen","React","toUnbond","setToUnbond","setStats","refreshStats","userStats","loadStats","e","intvl","setInterval","clearInterval","makeUnbondFn","isUnbond","staking","fn","unbond","bind","requestUnbond","tx","wait","AppBar","position","Toolbar","height","src","logo","alt","Fab","right","top","onDeny","onConfirm","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","autoFocus","UnbondConfirmationDialog","Modal","display","alignItems","justifyContent","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","maxAmount","onNewBond","pools","setBond","confirmation","setConfirmation","minWidthStyle","minWidth","width","TextField","required","value","onChange","ev","abs","floor","target","lt","FormControl","InputLabel","Select","MenuItem","FormControlLabel","userSelect","control","Checkbox","checked","gt","NewBondForm","stakingWithSigner","tokenWithSigner","allowance","txns","eq","approve","gasLimit","addBond","createNewBond","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,0C,sWCarCC,EAAU,CACfC,QAAS,CAAEC,KAPW,UAOIC,aARb,QAUbC,UAAW,CAAEF,KANY,UAMMC,aAVlB,QAWbE,UAAW,CAAEH,KANY,UAMMC,aAXlB,QAYbG,KAAM,CAAEJ,KATgB,UASCC,aAZZ,QAabI,MAAOC,IACPC,QAASC,IACTC,MAAOC,IACPC,kBAAmB,EACnBC,YAAa,GACbC,KAAMT,KAGDU,EAAQC,YAAe,CAC5BC,WAAY,CACXC,WAAY,6CACZC,SAAU,IAEXpB,QAAQ,eAAMA,GACdqB,UAAW,CACVC,UAAW,CACVC,KAAM,CACLC,aAAc,GAEfC,SAAU,CACTD,aAAc,IAGhBE,aAAc,CACbC,KAAM,CACLC,WAAY,UAEbL,KAAM,CACLK,WAAY,WAGdC,SAAU,CACTC,QAAS,CACRN,aAAc,IAGhBO,WAAY,CACXC,QAAS,CAAER,aAAc,OAKfS,EAAWC,YAAoBlB,EAAO,CAClDmB,QAAS,CAAC,KAAM,KAAM,KAAM,KAAM,MAClCC,OAAQ,I,+TC/DIC,GAAa,CACzB,CACCC,OAAQ,CACP,CAAEC,aAAc,UAAWC,KAAM,QAASC,KAAM,WAChD,CAAEF,aAAc,UAAWC,KAAM,UAAWC,KAAM,YAEnDC,SAAS,EACTC,gBAAiB,aACjBF,KAAM,eAEP,CACCG,WAAW,EACXN,OAAQ,CACP,CACCO,SAAS,EACTN,aAAc,UACdC,KAAM,QACNC,KAAM,WAEP,CACCI,SAAS,EACTN,aAAc,UACdC,KAAM,SACNC,KAAM,WAEP,CACCI,SAAS,EACTN,aAAc,UACdC,KAAM,SACNC,KAAM,WAEP,CACCI,SAAS,EACTN,aAAc,UACdC,KAAM,QACNC,KAAM,YAGRD,KAAM,UACNC,KAAM,SAEP,CACCG,WAAW,EACXN,OAAQ,CACP,CACCO,SAAS,EACTN,aAAc,UACdC,KAAM,QACNC,KAAM,WAEP,CACCI,SAAS,EACTN,aAAc,UACdC,KAAM,SACNC,KAAM,WAEP,CACCI,SAAS,EACTN,aAAc,SACdC,KAAM,aACNC,KAAM,WAGRD,KAAM,qBACNC,KAAM,SAEP,CACCG,WAAW,EACXN,OAAQ,CACP,CACCO,SAAS,EACTN,aAAc,UACdC,KAAM,QACNC,KAAM,WAEP,CACCI,SAAS,EACTN,aAAc,UACdC,KAAM,SACNC,KAAM,YAGRD,KAAM,cACNC,KAAM,SAEP,CACCK,UAAU,EACVR,OAAQ,CACP,CACCS,WAAY,CACX,CAAER,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,QAASC,KAAM,YAEjDF,aAAc,0BACdC,KAAM,OACNC,KAAM,UAGRD,KAAM,UACNQ,QAAS,GACTN,SAAS,EACTC,gBAAiB,aACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIC,KAAM,YACpDD,KAAM,QACNQ,QAAS,CACR,CAAET,aAAc,OAAQC,KAAM,SAAUC,KAAM,QAC9C,CAAEF,aAAc,SAAUC,KAAM,iBAAkBC,KAAM,UACxD,CAAEF,aAAc,SAAUC,KAAM,aAAcC,KAAM,WAErDC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,CACP,CAAEC,aAAc,UAAWC,KAAM,QAASC,KAAM,WAChD,CACCM,WAAY,CACX,CAAER,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,QAASC,KAAM,YAEjDF,aAAc,0BACdC,KAAM,OACNC,KAAM,UAGRD,KAAM,oBACNQ,QAAS,CAAC,CAAET,aAAc,UAAWC,KAAM,GAAIC,KAAM,YACrDC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,CACP,CACCS,WAAY,CACX,CAAER,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,QAASC,KAAM,YAEjDF,aAAc,0BACdC,KAAM,OACNC,KAAM,UAGRD,KAAM,gBACNQ,QAAS,GACTN,SAAS,EACTC,gBAAiB,aACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,CACP,CAAEC,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,MAAOC,KAAM,YAE/CD,KAAM,QACNQ,QAAS,GACTN,SAAS,EACTC,gBAAiB,aACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIC,KAAM,YACpDD,KAAM,cACNQ,QAAS,CAAC,CAAET,aAAc,UAAWC,KAAM,GAAIC,KAAM,YACrDC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,GACRE,KAAM,cACNQ,QAAS,CAAC,CAAET,aAAc,UAAWC,KAAM,GAAIC,KAAM,YACrDC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,GACRE,KAAM,YACNQ,QAAS,CAAC,CAAET,aAAc,UAAWC,KAAM,GAAIC,KAAM,YACrDC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAEP,CACCK,UAAU,EACVR,OAAQ,CACP,CACCS,WAAY,CACX,CAAER,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,SAAUC,KAAM,WACjD,CAAEF,aAAc,UAAWC,KAAM,QAASC,KAAM,YAEjDF,aAAc,0BACdC,KAAM,OACNC,KAAM,UAGRD,KAAM,SACNQ,QAAS,GACTN,SAAS,EACTC,gBAAiB,aACjBF,KAAM,aCxNKQ,GAAW,CACpB,CACI,UAAY,EACZ,OAAU,GACV,KAAQ,OACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,WAGhB,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,CACN,CACI,KAAQ,WACR,KAAQ,WAEZ,CACI,KAAQ,SACR,KAAQ,YAGhB,KAAQ,UACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,SAGhB,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,GACV,KAAQ,cACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,YAGhB,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,CACN,CACI,KAAQ,QACR,KAAQ,WAEZ,CACI,KAAQ,MACR,KAAQ,WAEZ,CACI,KAAQ,SACR,KAAQ,YAGhB,KAAQ,eACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,SAGhB,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,GACV,KAAQ,WACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,UAGhB,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,CACN,CACI,KAAQ,SACR,KAAQ,YAGhB,KAAQ,YACR,QAAW,CACP,CACI,KAAQ,UACR,KAAQ,YAGhB,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,GACV,KAAQ,SACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,WAGhB,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,CACN,CACI,KAAQ,MACR,KAAQ,WAEZ,CACI,KAAQ,SACR,KAAQ,YAGhB,KAAQ,WACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,SAGhB,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,CACN,CACI,KAAQ,SACR,KAAQ,WAEZ,CACI,KAAQ,WACR,KAAQ,YAGhB,KAAQ,YACR,QAAW,CACP,CACI,KAAQ,GACR,KAAQ,YAGhB,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAEZ,CACI,SAAW,EACX,gBAAmB,UACnB,KAAQ,YAEZ,CACI,WAAa,EACb,OAAU,CACN,CACI,SAAW,EACX,KAAQ,QACR,KAAQ,WAEZ,CACI,SAAW,EACX,KAAQ,UACR,KAAQ,WAEZ,CACI,SAAW,EACX,KAAQ,QACR,KAAQ,YAGhB,KAAQ,WACR,KAAQ,SAEZ,CACI,WAAa,EACb,OAAU,CACN,CACI,SAAW,EACX,KAAQ,OACR,KAAQ,WAEZ,CACI,SAAW,EACX,KAAQ,KACR,KAAQ,WAEZ,CACI,SAAW,EACX,KAAQ,QACR,KAAQ,YAGhB,KAAQ,WACR,KAAQ,UC9KVC,GAAW,6CACXC,GAAe,6CACfC,GAAiB,IACjBC,GAAgB,IAEhBC,GAAWC,gCACXC,GAAU,IAAIC,YAASN,GAAcd,GAAYiB,IACjDI,GAAQ,IAAID,YAASP,GAAUD,GAAUK,IAEzCK,GACL,0EAEKC,GAAc,GAEdC,GAAQ,CACb,CACCC,MAAO,gBACPC,GAAIA,cAAG,wDACPC,YAAY,GAEb,CACCF,MAAO,kBACPC,GAAIA,cAAG,wDACPC,YAAY,IAIRC,GAAOC,wBAAa,GACpBC,GAAe,CACpBC,OAAQ,GACRC,OAAQJ,IAEHK,GAAc,CACnBC,QAAQ,EACRC,UAAW,GACXC,YAAaR,GACbS,WAAYT,IAGb,SAASU,GAAT,GAAwD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAAOP,EAAU,EAAVA,OAC5C,OACC,kBAACQ,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAAEC,OAAQjD,EAASkD,QAAQ,KACtD,yBAAKF,MAAO,CAAEG,QAASnD,EAASkD,QAAQ,GAAIE,UAAW,SACtD,kBAACC,GAAA,EAAD,CAAYC,QAAQ,MAAMV,GACzBC,EACA,kBAACQ,GAAA,EAAD,CAAYE,MAAM,UAAUD,QAAQ,MAClCT,GAGF,qCAED,kBAACQ,GAAA,EAAD,CAAYE,MAAM,gBAAgBD,QAAQ,aACxCX,IAGDL,EAA8B,qCAArB,kBAACkB,EAAA,EAAD,OA2Hd,SAASC,GAAT,GAA0D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,gBAAiBC,EAAY,EAAZA,SACtCC,EAAiBH,EAAMnB,UAC3BuB,QAAO,SAAAC,GAAC,MAAiB,WAAbA,EAAEC,UACdC,KAAI,SAAAF,GAAC,OAAIA,EAAE3B,UACX8B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,IAAID,KAAIpC,IAJ2B,EAO5BsC,mBAAS,IAPmB,mBAOjDC,EAPiD,KAOzCC,EAPyC,KAaxDC,qBAAU,WAJTC,MAAMhD,IACJiD,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,KAAKH,GACLM,MAAMC,QAAQzG,SAGd,IACH,IAAM0G,EAAQ,SAAAC,GACb,IAAKA,EAAW,OAAO,KACvB,IAAKV,EAAOW,IAAK,OAAO,KACxB,IAAMC,EAAaF,EAAUG,SAAS,IAAMjE,GAAkBoD,EAAOW,IACrE,MAAM,GAAN,OAAUC,EAAUE,QAAQ,GAA5B,SA6CKC,EAAkB,CAAEC,WAAY,QACtC,OACC,kBAACC,EAAA,EAAD,CACCC,WAAS,EACTzC,MAAO,CACNG,QAASnD,EAASkD,QAAQ,GAC1BwC,SAAU,SACVzC,OAAQ,SAGT,kBAACuC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACblD,GAAU,CACVJ,OAAQoB,EAAMpB,OACdK,MAAO,mBACPE,MAAOmC,EAAMtB,EAAMjB,YACnBG,SAAUiD,GAAUnC,EAAMjB,YAAc,UAI1C,kBAAC+C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACblD,GAAU,CACVJ,OAAQoB,EAAMpB,OACdK,MAAO,0BACPE,MAAOmC,EAAMnB,GACbjB,SAAUiD,GAAUhC,GAAkB,UAIxC,kBAAC2B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACblD,GAAU,CACVJ,OAAQoB,EAAMpB,OACdK,MAAO,eACPC,SAAUc,EAAMlB,YACbqD,GAAUnC,EAAMlB,aAAe,OAC/B,GACHK,MAAOmC,EAAMtB,EAAMlB,gBAIrB,kBAACgD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACblD,GAAU,CACVJ,OAAQoB,EAAMpB,OAEdK,MAAO,oBACPE,MAAO,WACPD,SAAU,cAQZ,kBAACkD,EAAA,EAAD,CAAgBF,GAAI,IACnB,kBAACG,EAAA,EAAD,CACCC,aAAW,cACXhD,MAAO,CAAEiD,UAAWjG,EAASkD,QAAQ,KAErC,kBAACgD,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWpD,MAAOsC,GAAlB,eACA,kBAACc,EAAA,EAAD,CAAWpD,MAAOsC,EAAiBe,MAAM,SAAzC,qBAGA,kBAACD,EAAA,EAAD,CAAWpD,MAAOsC,EAAiBe,MAAM,SAAzC,QAGA,kBAACD,EAAA,EAAD,CAAWpD,MAAOsC,EAAiBe,MAAM,SAAzC,UAGA,kBAACD,EAAA,EAAD,CAAWpD,MAAOsC,EAAiBe,MAAM,SAAzC,aAKF,kBAACC,EAAA,EAAD,MAAa5C,EAAMnB,WAAa,IAAI0B,KAvGlB,SAAAsC,GACrB,IAAMC,EAAO5E,GAAM6E,MAAK,SAAA1C,GAAC,OAAIA,EAAEjC,KAAOyE,EAAKpE,UACrCuE,EAAYF,EAAOA,EAAK3E,MAAQ0E,EAAKpE,OAC3C,OACC,kBAACgE,EAAA,EAAD,CAAUQ,IAAKC,GAAUL,IACxB,kBAACH,EAAA,EAAD,KAAYP,GAAUU,EAAKnE,QAA3B,QACA,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAASK,GAC1B,kBAACN,EAAA,EAAD,CAAWC,MAAM,SAtBD,SAAAE,GAClB,GAAoB,oBAAhBA,EAAKvC,OAA8B,CACtC,IAAM6C,EAAaN,EAAKM,WAAWC,UAC7BC,EAAMC,KAAKD,MACjB,GAAIF,EAAaE,EAAK,CACrB,IAAME,EAAOC,KAAKC,MAAMN,EAAaE,GAAO,OAC5C,MAAM,iBAAN,OAAwBE,EAAxB,SAEA,MAAO,aAGT,OAAOV,EAAKvC,OAWgBoD,CAAWb,IACrC,kBAACH,EAAA,EAAD,CAAWC,MAAM,SACC,WAAhBE,EAAKvC,OACL,kBAACqD,EAAA,EAAD,CAAQ9D,MAAM,UAAU+D,QAAS,kBAAM3D,EAAgB4C,KAAvD,kBAIA,kBAACc,EAAA,EAAD,CACCE,SAAUhB,EAAKM,WAAWC,UAAYE,KAAKD,MAC3CO,QAAS,kBAAM1D,EAAS2C,IACxBhD,MAAM,aAHP,mBAyLN,SAASsC,GAAU2B,GAClB,OAAQA,EAAIpC,SAAS,IAAMjE,IAAgBkE,QAAQ,GAGpD,SAASuB,GAAT,GAAsD,IAAjCa,EAAgC,EAAhCA,MAAOrF,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,OAAQuF,EAAS,EAATA,MAC3C,OAAOC,qBACNC,mBAAgBC,OACf,CAAC,UAAW,UAAW,OAAQ,UAAW,QAC1C,CAAC3G,GAAcuG,EAAOrF,EAAQD,EAAQuF,KAazC,SAAeI,KAAf,6BAAA3D,EAAA4D,OAAA,mDACMC,OAAOC,KADb,yCAES,CACN3F,QAAQ,EACRC,UAAW,GACXC,YAAaR,KALhB,cAQOX,EAAW,IAAI6G,gBAAaF,OAAOC,KAAKE,iBACxCC,EAAS/G,EAASgH,YATzB,WAAAlE,EAAA,MAUoBiE,EAAOE,cAV3B,cAUOC,EAVP,kBAAApE,EAAA,MAY2BqE,QAAQC,IAAI,CACrChH,GAAMiH,UAAUH,GAChBlH,EAASsH,QAAQ,CAChBC,UAAW,EACXC,QAAS3H,GACT4H,OAAQ,CAAC,KAAMC,sBAAWR,EAAM,UAjBnC,0CAYQS,EAZR,KAYaC,EAZb,KAoBO1G,EAAY0G,EAAK/E,QAAO,SAACgF,EAAOC,GACrC,IAAMC,EAAQD,EAAIL,OAAO,GACnBO,EAAM9H,GAAQ+H,UAAUC,OAC9B,GAAIH,IAAUC,EAAIG,QAAQJ,MAAO,CAChC,IAAMK,EAAOlI,GAAQ+H,UAAUI,SAASP,GAAKQ,OAEvCpD,EAAO,CAAEkB,MAD0BgC,EAAjChC,MACcrF,OADmBqH,EAA1BrH,OACeD,OADWsH,EAAlBtH,OACeuF,MADG+B,EAAV/B,OAE/BwB,EAAMU,KAAN,aAAa9H,GAAI8E,GAAUL,GAAOvC,OAAQ,UAAauC,SACjD,GAAI6C,IAAUC,EAAIQ,mBAAmBT,MAAO,OAEnB7H,GAAQ+H,UAAUI,SAASP,GAAKQ,OAAvDG,EAF0C,EAE1CA,OAAQjD,EAFkC,EAElCA,WACVN,EAAO2C,EAAMzC,MAAK,qBAAG3E,KAAgBgI,KAC3CvD,EAAKvC,OAAS,kBACduC,EAAKM,WAAa,IAAIG,KAAkB,IAAbH,QACrB,GAAIuC,IAAUC,EAAIU,YAAYX,MAAO,CAAC,IACpCU,EAAWvI,GAAQ+H,UAAUI,SAASP,GAAKQ,OAA3CG,OACRZ,EAAMzC,MAAK,qBAAG3E,KAAgBgI,KAAQ9F,OAAS,WAEhD,OAAOkF,IACL,IAvCJ,kBAwCQ,CACN5G,QAAQ,EACRC,YACAC,YAAawG,IA3Cf,sCCrdoBgB,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBF4WD,WAAgB,IAAD,EACW/F,oBAAS,GADpB,mBACtBgG,EADsB,KACPC,EADO,OAEGC,IAAMlG,SAAS,MAFlB,mBAEtBmG,EAFsB,KAEZC,EAFY,OAGHpG,mBAASjC,IAHN,mBAGtBqB,EAHsB,KAGfiH,EAHe,KAKvBC,EAAe,kBAkGtB,gCAAAzG,EAAA4D,OAAA,kEAAA5D,EAAA,MACuCqE,QAAQC,IAAI,CACjDhH,GAAMiH,UAAUxH,IAChB4G,QAHF,0CACQrF,EADR,KACoBoI,EADpB,oCAKUpI,cAAeoI,IALzB,qCAjGEC,GACEnG,KAAKgG,GACL7F,OAAM,SAAAiG,GAAC,OAAIhG,QAAQzG,MAAM,YAAayM,OACzCtG,qBAAU,WACTmG,IACA,IAAMI,EAAQC,YAAYL,EAAcxJ,IACxC,OAAO,kBAAM8J,cAAcF,MACzB,IAEH,IAKMG,EAAe,SAAAC,GAAQ,OAAI,yCAAAjH,EAAA4D,OAAA,uDAAS3F,EAAT,EAASA,OAAQD,EAAjB,EAAiBA,OAAQuF,EAAzB,EAAyBA,MAEnDrG,EAAW,IAAI6G,gBAAaF,OAAOC,KAAKE,iBACxCC,EAAS/G,EAASgH,YAClBgD,EAAU,IAAI7J,YAASN,GAAcd,GAAYgI,GACjDkD,EAAKF,EACRC,EAAQE,OAAOC,KAAKH,GACpBA,EAAQI,cAAcD,KAAKH,GAPE,WAAAlH,EAAA,MAQfmH,EAAG,CAAClJ,EAAQD,EAAQuF,GAAS1F,MARd,cAQ1B0J,EAR0B,mBAAAvH,EAAA,MAS1BuH,EAAGC,QATuB,wCAW3BhI,EAAkBwH,GAAa,GAC/BvH,EAAWuH,GAAa,GAE9B,OACC,kBAAC,IAAD,CAAkBpM,MAAOiB,GACxB,kBAAC4L,EAAA,EAAD,CAAQC,SAAS,UAChB,kBAACC,EAAA,EAAD,KACC,yBAAKC,OAAO,OAAOC,IAAKC,KAAMC,IAAI,SAClC,kBAACC,EAAA,EAAD,CACC5E,UAAW7D,EAAMpB,OACjBgF,QAAS,kBAAMiD,GAAe,IAC9BjH,QAAQ,WACRC,MAAM,YACNP,MAAO,CAAE6I,SAAU,WAAYO,MAAO,KAAMC,IAAK,QAEjD,kBAAC,IAAD,CAASrJ,MAAO,CAAEC,OAAQjD,EAASkD,QAAQ,MAP5C,oBAcFO,GAAU,CAAEC,QAAOC,gBAAiB+G,EAAa9G,aAxOpD,YAAoE,IAAhC6G,EAA+B,EAA/BA,SAAU6B,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UACrD,OACC,kBAACC,EAAA,EAAD,CAAQC,OAAQhC,EAAUiC,QAASJ,GAClC,kBAACK,EAAA,EAAD,CAAa7K,GAAG,sBAAhB,iBACA,kBAAC8K,EAAA,EAAD,qDAC+C,IAC7C/G,GAAU4E,EAAWA,EAASrI,OAASJ,IAFzC,QAGC,6BACA,6BAJD,mBAMC,4BACC,4CACeL,GADf,uDAIA,sGAKF,kBAACkL,EAAA,EAAD,KACC,kBAACxF,EAAA,EAAD,CAAQC,QAASgF,EAAQQ,WAAS,EAACvJ,MAAM,WAAzC,UAGA,kBAAC8D,EAAA,EAAD,CAAQC,QAASiF,EAAWhJ,MAAM,WAAlC,YAkNAwJ,CAAyB,CACzBtC,WACA6B,OAAQ,kBAAM5B,EAAY,OAC1B6B,UAAW,WACN9B,GAAU9G,EAAgB8G,GAC9BC,EAAY,SAId,kBAACsC,EAAA,EAAD,CACCP,KAAMnC,EACNoC,QAAS,kBAAMnC,GAAe,IAC9BvH,MAAO,CACNiK,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEjBC,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACdC,QAAS,MAGV,kBAACC,EAAA,EAAD,CAAMC,GAAIpD,GAvVd,YAAuD,IAAhCqD,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MAAS,EAC7BvJ,mBAASpC,IADoB,mBAC9CqE,EAD8C,KACxCuH,EADwC,OAEbxJ,oBAAS,GAFI,mBAE9CyJ,EAF8C,KAEhCC,EAFgC,KAG/CC,EAAgB,CAAEC,SAAU,SAElC,OACC,kBAACpL,EAAA,EAAD,CACCC,UAAW,EACXC,MAAO,CAAEmL,MAAO,QAAShL,QAASnD,EAASkD,QAAQ,EAAG,EAAG,KAEzD,6CACA,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAACvC,QAAS,GACxB,kBAACsC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,kBAACwI,EAAA,EAAD,CACCC,UAAQ,EACRxM,MAAM,aACNrB,KAAK,SACLwC,MAAOiL,EACPK,MAAO/H,EAAKnE,OAAOgD,WAAajE,GAChCoN,SAAU,SAAAC,GAAE,OACXV,EAAQ,eACJvH,EADG,CAENnE,QAlBQ+B,EAmBPwJ,EAnBUvJ,EAoBVnC,wBACCiF,KAAKuH,IAAIvH,KAAKwH,MAAMF,EAAGG,OAAOL,MAAQnN,MArBtBgD,EAAEyK,GAAGxK,GAAKD,EAAIC,MAAzB,IAACD,EAAGC,KA2Bd,kBAACf,GAAA,EAAD,CAAYC,QAAQ,aAApB,cAEC,kBAAC+D,EAAA,EAAD,CAAQC,QAAS,SAAAkH,GAAE,OAAIV,EAAQ,eAAKvH,EAAN,CAAYnE,OAAQuL,OAChD9H,GAAU8H,GADZ,UAKF,kBAACnI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,kBAACiJ,EAAA,EAAD,CAAaR,UAAQ,GACpB,kBAACS,EAAA,EAAD,aACA,kBAACC,EAAA,EAAD,CACC/L,MAAOiL,EACPK,MAAO/H,EAAKpE,OACZoM,SAAU,SAAAC,GAAE,OAAIV,EAAQ,eAAKvH,EAAN,CAAYpE,OAAQqM,EAAGG,OAAOL,WAErD,kBAACU,EAAA,EAAD,CAAUV,MAAO,IAChB,qCAEAT,EAAM5J,KAAI,gBAAGpC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,kBAACkN,EAAA,EAAD,CAAUrI,IAAK7E,EAAIwM,MAAOxM,GACxBD,SAMN,kBAAC2D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACd,kBAACqJ,EAAA,EAAD,CACCjM,MAAO,CAAEkM,WAAY,QACrBrN,MAAK,2DAAsDF,GAAtD,mDACLwN,QACC,kBAACC,EAAA,EAAD,CACCC,QAAStB,EACTQ,SAAU,SAAAC,GAAE,OAAIR,EAAgBQ,EAAGG,OAAOU,eAK9C,kBAAC7J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACd,kBAACiJ,EAAA,EAAD,CAAa7L,MAAO,CAAEiK,QAAS,SAC9B,kBAAC5F,EAAA,EAAD,CACCE,WAAYhB,EAAKpE,QAAU4L,GAAgBxH,EAAKnE,OAAOkN,GAAGtN,KAC1DuB,MAAM,UACND,QAAQ,YACRgE,QAAS,kBAAMsG,EAAUrH,KAJ1B,iBAiRAgJ,CAAY,CACZ1B,MAAOjM,GAAMkC,QAAO,SAAAC,GAAC,OAAIA,EAAEhC,cAC3B4L,UAAWjK,EAAMlB,YACjBoL,UAnEa,SAAArH,GACjBgE,GAAe,GA+IjB,SAA6B7G,EAA7B,2BAAAS,EAAA4D,OAAA,mDAAsC3F,EAAtC,EAAsCA,OAAQD,EAA9C,EAA8CA,OAAQuF,EAAtD,EAAsDA,MAEhDvF,EAFN,oDAGMuB,EAAMlB,YAHZ,qDAIKJ,EAAOkN,GAAG5L,EAAMlB,aAJrB,wDAMOnB,EAAW,IAAI6G,gBAAaF,OAAOC,KAAKE,iBACxCC,EAAS/G,EAASgH,YAClBmH,EAAoB,IAAIhO,YAASN,GAAcd,GAAYgI,GAC3DqH,EAAkB,IAAIjO,YAASP,GAAUD,GAAUoH,GAT1D,OAAAjE,EAAA,KAUyBsL,EAVzB,YAAAtL,EAAA,MAWQiE,EAAOE,cAXf,gCAYEpH,GAZF,UAUyCwO,UAVzC,qEAUOA,EAVP,OAcKC,EAAO,GAGND,EAAUE,GAAGxN,GAjBnB,qBAkBMsN,EAAUJ,GAAGtN,IAlBnB,6BAmBG2N,EAnBH,YAAAxL,EAAA,MAoBUsL,EAAgBI,QAAQ3O,GAAcc,GAAM,CAAE8N,SAAU,OApBlE,yBAmBQlG,KAnBR,oCAuBE+F,EAvBF,YAAAxL,EAAA,MAwBSsL,EAAgBI,QAAQ3O,GAAckB,EAAQ,CACnD0N,SAAU,OAzBd,yBAuBOlG,KAvBP,oCA6BC+F,EA7BD,YAAAxL,EAAA,MA8BQqL,EAAkBO,QAAQ,CAAC3N,EAAQD,EAAQuF,GAAS1F,IAAO,CAChE8N,SAAU,QA/Bb,iCA6BMlG,KA7BN,6BAAAzF,EAAA,MAmCOqE,QAAQC,IAAIkH,EAAK1L,KAAI,SAAAyH,GAAE,OAAIA,EAAGC,YAnCrC,sCA9IEqE,CAActM,EAAO6C,WE7XP,MAAS0J,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1L,MAAK,SAAA2L,GACjCA,EAAaC,kB","file":"static/js/main.5b3e6adf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adex-staking.bf64bad2.svg\";","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\"\nimport lime from \"@material-ui/core/colors/lime\"\nimport deepOrange from \"@material-ui/core/colors/deepOrange\"\nimport amber from \"@material-ui/core/colors/amber\"\nimport grey from \"@material-ui/core/colors/grey\"\n\nconst WHITE = \"#fff\"\nexport const PRIMARY = \"#1B75BC\"\nexport const SECONDARY = \"#FFAC00\"\nexport const ALEX_GREY = \"#3f3e3e\"\nexport const ACCENT_ONE = \"#57467B\"\nexport const ACCENT_TWO = \"#7CB4B8\"\n\nconst palette = {\n\tprimary: { main: PRIMARY, contrastText: WHITE },\n\t//secondary: { main: SECONDARY, contrastText: WHITE },\n\taccentOne: { main: ACCENT_ONE, contrastText: WHITE },\n\taccentTwo: { main: ACCENT_TWO, contrastText: WHITE },\n\tgrey: { main: ALEX_GREY, contrastText: WHITE },\n\terror: deepOrange,\n\twarning: amber,\n\tfirst: lime,\n\tcontrastThreshold: 3,\n\ttonalOffset: 0.2,\n\ttext: grey\n}\n\nconst theme = createMuiTheme({\n\ttypography: {\n\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n\t\tfontSize: 13\n\t},\n\tpalette: { ...palette },\n\toverrides: {\n\t\tMuiButton: {\n\t\t\troot: {\n\t\t\t\tborderRadius: 0\n\t\t\t},\n\t\t\toutlined: {\n\t\t\t\tborderRadius: 0\n\t\t\t}\n\t\t},\n\t\tMuiTableCell: {\n\t\t\thead: {\n\t\t\t\twhiteSpace: \"nowrap\"\n\t\t\t},\n\t\t\troot: {\n\t\t\t\twhiteSpace: \"nowrap\"\n\t\t\t}\n\t\t},\n\t\tMuiPaper: {\n\t\t\trounded: {\n\t\t\t\tborderRadius: 0\n\t\t\t}\n\t\t},\n\t\tMuiTooltip: {\n\t\t\ttooltip: { borderRadius: 0 }\n\t\t}\n\t}\n})\n\nexport const themeMUI = responsiveFontSizes(theme, {\n\toptions: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n\tfactor: 3\n})\n","export const StakingABI = [\n\t{\n\t\tinputs: [\n\t\t\t{ internalType: \"address\", name: \"token\", type: \"address\" },\n\t\t\t{ internalType: \"address\", name: \"slasher\", type: \"address\" }\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"constructor\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"poolId\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"nonce\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"LogBond\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"bondId\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"uint64\",\n\t\t\t\tname: \"willUnlock\",\n\t\t\t\ttype: \"uint64\"\n\t\t\t}\n\t\t],\n\t\tname: \"LogUnbondRequested\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"bondId\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tname: \"LogUnbonded\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tcomponents: [\n\t\t\t\t\t{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n\t\t\t\t\t{ internalType: \"bytes32\", name: \"poolId\", type: \"bytes32\" },\n\t\t\t\t\t{ internalType: \"uint256\", name: \"nonce\", type: \"uint256\" }\n\t\t\t\t],\n\t\t\t\tinternalType: \"struct BondLibrary.Bond\",\n\t\t\t\tname: \"bond\",\n\t\t\t\ttype: \"tuple\"\n\t\t\t}\n\t\t],\n\t\tname: \"addBond\",\n\t\toutputs: [],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n\t\tname: \"bonds\",\n\t\toutputs: [\n\t\t\t{ internalType: \"bool\", name: \"active\", type: \"bool\" },\n\t\t\t{ internalType: \"uint64\", name: \"slashedAtStart\", type: \"uint64\" },\n\t\t\t{ internalType: \"uint64\", name: \"willUnlock\", type: \"uint64\" }\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [\n\t\t\t{ internalType: \"address\", name: \"owner\", type: \"address\" },\n\t\t\t{\n\t\t\t\tcomponents: [\n\t\t\t\t\t{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n\t\t\t\t\t{ internalType: \"bytes32\", name: \"poolId\", type: \"bytes32\" },\n\t\t\t\t\t{ internalType: \"uint256\", name: \"nonce\", type: \"uint256\" }\n\t\t\t\t],\n\t\t\t\tinternalType: \"struct BondLibrary.Bond\",\n\t\t\t\tname: \"bond\",\n\t\t\t\ttype: \"tuple\"\n\t\t\t}\n\t\t],\n\t\tname: \"getWithdrawAmount\",\n\t\toutputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tcomponents: [\n\t\t\t\t\t{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n\t\t\t\t\t{ internalType: \"bytes32\", name: \"poolId\", type: \"bytes32\" },\n\t\t\t\t\t{ internalType: \"uint256\", name: \"nonce\", type: \"uint256\" }\n\t\t\t\t],\n\t\t\t\tinternalType: \"struct BondLibrary.Bond\",\n\t\t\t\tname: \"bond\",\n\t\t\t\ttype: \"tuple\"\n\t\t\t}\n\t\t],\n\t\tname: \"requestUnbond\",\n\t\toutputs: [],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{ internalType: \"bytes32\", name: \"poolId\", type: \"bytes32\" },\n\t\t\t{ internalType: \"uint256\", name: \"pts\", type: \"uint256\" }\n\t\t],\n\t\tname: \"slash\",\n\t\toutputs: [],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n\t\tname: \"slashPoints\",\n\t\toutputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: \"slasherAddr\",\n\t\toutputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: \"tokenAddr\",\n\t\toutputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tcomponents: [\n\t\t\t\t\t{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n\t\t\t\t\t{ internalType: \"bytes32\", name: \"poolId\", type: \"bytes32\" },\n\t\t\t\t\t{ internalType: \"uint256\", name: \"nonce\", type: \"uint256\" }\n\t\t\t\t],\n\t\t\t\tinternalType: \"struct BondLibrary.Bond\",\n\t\t\t\tname: \"bond\",\n\t\t\t\ttype: \"tuple\"\n\t\t\t}\n\t\t],\n\t\tname: \"unbond\",\n\t\toutputs: [],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t}\n]\n","export const ERC20ABI = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_from\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"fallback\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    }\n]","import React, { useEffect, useState } from \"react\"\nimport { MuiThemeProvider } from \"@material-ui/core/styles\"\nimport { themeMUI } from \"./themeMUi\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Backdrop from \"@material-ui/core/Backdrop\"\nimport Fab from \"@material-ui/core/Fab\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Typography from \"@material-ui/core/Typography\"\nimport logo from \"./adex-staking.svg\"\nimport { Contract, getDefaultProvider } from \"ethers\"\nimport {\n\tbigNumberify,\n\tid,\n\thexZeroPad,\n\tkeccak256,\n\tdefaultAbiCoder\n} from \"ethers/utils\"\nimport { Web3Provider } from \"ethers/providers\"\nimport { StakingABI } from \"./abi/Staking\"\nimport { ERC20ABI } from \"./abi/ERC20\"\n\nconst ADDR_ADX = \"0x4470bb87d77b963a013db939be332f927f2b992e\"\nconst ADDR_STAKING = \"0xb2cdea5147f7d51f5f49f2bd91fec04b6999a0fe\"\nconst ADX_MULTIPLIER = 10000\nconst REFRESH_INTVL = 30000\n\nconst provider = getDefaultProvider()\nconst Staking = new Contract(ADDR_STAKING, StakingABI, provider)\nconst Token = new Contract(ADDR_ADX, ERC20ABI, provider)\n\nconst PRICES_API_URL =\n\t\"https://min-api.cryptocompare.com/data/price?fsym=ADX&tsyms=BTC,USD,EUR\"\n\nconst UNBOND_DAYS = 30\n\nconst POOLS = [\n\t{\n\t\tlabel: \"Validator Tom\",\n\t\tid: id(\"validator:0x2892f6C41E0718eeeDd49D98D648C789668cA67d\"),\n\t\tselectable: true\n\t},\n\t{\n\t\tlabel: \"Validator Jerry\",\n\t\tid: id(\"validator:0xce07CbB7e054514D590a0262C93070D838bFBA2e\"),\n\t\tselectable: false\n\t}\n]\n\nconst ZERO = bigNumberify(0)\nconst DEFAULT_BOND = {\n\tpoolId: \"\",\n\tamount: ZERO\n}\nconst EMPTY_STATS = {\n\tloaded: false,\n\tuserBonds: [],\n\tuserBalance: ZERO,\n\ttotalStake: ZERO\n}\n\nfunction StatsCard({ title, subtitle, extra, loaded }) {\n\treturn (\n\t\t<Paper elevation={3} style={{ margin: themeMUI.spacing(1) }}>\n\t\t\t<div style={{ padding: themeMUI.spacing(2), minHeight: \"75px\" }}>\n\t\t\t\t<Typography variant=\"h5\">{subtitle}</Typography>\n\t\t\t\t{extra ? (\n\t\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\t\t{extra}\n\t\t\t\t\t</Typography>\n\t\t\t\t) : (\n\t\t\t\t\t<></>\n\t\t\t\t)}\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"subtitle2\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t{!loaded ? <LinearProgress /> : <></>}\n\t\t</Paper>\n\t)\n}\n\nfunction NewBondForm({ maxAmount, onNewBond, pools }) {\n\tconst [bond, setBond] = useState(DEFAULT_BOND)\n\tconst [confirmation, setConfirmation] = useState(false)\n\tconst minWidthStyle = { minWidth: \"180px\" }\n\tconst minBN = (a, b) => (a.lt(b) ? a : b)\n\treturn (\n\t\t<Paper\n\t\t\televation={2}\n\t\t\tstyle={{ width: \"500px\", padding: themeMUI.spacing(2, 4, 3) }}\n\t\t>\n\t\t\t<h2>Create a bond</h2>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabel=\"ADX amount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstyle={minWidthStyle}\n\t\t\t\t\t\tvalue={bond.amount.toNumber() / ADX_MULTIPLIER}\n\t\t\t\t\t\tonChange={ev =>\n\t\t\t\t\t\t\tsetBond({\n\t\t\t\t\t\t\t\t...bond,\n\t\t\t\t\t\t\t\tamount: minBN(\n\t\t\t\t\t\t\t\t\tmaxAmount,\n\t\t\t\t\t\t\t\t\tbigNumberify(\n\t\t\t\t\t\t\t\t\t\tMath.abs(Math.floor(ev.target.value * ADX_MULTIPLIER))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t></TextField>\n\t\t\t\t\t<Typography variant=\"subtitle2\">\n\t\t\t\t\t\tMax amount:\n\t\t\t\t\t\t<Button onClick={ev => setBond({ ...bond, amount: maxAmount })}>\n\t\t\t\t\t\t\t{formatADX(maxAmount)} ADX\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<FormControl required>\n\t\t\t\t\t\t<InputLabel>Pool</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tstyle={minWidthStyle}\n\t\t\t\t\t\t\tvalue={bond.poolId}\n\t\t\t\t\t\t\tonChange={ev => setBond({ ...bond, poolId: ev.target.value })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value={\"\"}>\n\t\t\t\t\t\t\t\t<em>None</em>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t{pools.map(({ label, id }) => (\n\t\t\t\t\t\t\t\t<MenuItem key={id} value={id}>\n\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tstyle={{ userSelect: \"none\" }}\n\t\t\t\t\t\tlabel={`I understand I am locking up my ADX for at least ${UNBOND_DAYS} days and I am familiar with the staking terms.`}\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={confirmation}\n\t\t\t\t\t\t\t\tonChange={ev => setConfirmation(ev.target.checked)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t></FormControlLabel>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<FormControl style={{ display: \"flex\" }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={!(bond.poolId && confirmation && bond.amount.gt(ZERO))}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => onNewBond(bond)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tStake ADX\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t)\n}\n\nfunction UnbondConfirmationDialog({ toUnbond, onDeny, onConfirm }) {\n\treturn (\n\t\t<Dialog open={!!toUnbond} onClose={onDeny}>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">Are you sure?</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\tAre you sure you want to request unbonding of{\" \"}\n\t\t\t\t{formatADX(toUnbond ? toUnbond.amount : ZERO)} ADX?\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\tPlease be aware:\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tIt will take {UNBOND_DAYS} days before you will be able to withdraw\n\t\t\t\t\t\tyour ADX!\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tYou will not receive staking rewards for this amount in this period.\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={onDeny} autoFocus color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={onConfirm} color=\"primary\">\n\t\t\t\t\tUnbond\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nfunction Dashboard({ stats, onRequestUnbond, onUnbond }) {\n\tconst userTotalStake = stats.userBonds\n\t\t.filter(x => x.status === \"Active\")\n\t\t.map(x => x.amount)\n\t\t.reduce((a, b) => a.add(b), ZERO)\n\n\t// USD values\n\tconst [prices, setPrices] = useState({})\n\tconst refreshPrices = () =>\n\t\tfetch(PRICES_API_URL)\n\t\t\t.then(r => r.json())\n\t\t\t.then(setPrices)\n\t\t\t.catch(console.error)\n\tuseEffect(() => {\n\t\trefreshPrices()\n\t}, [])\n\tconst inUSD = adxAmount => {\n\t\tif (!adxAmount) return null\n\t\tif (!prices.USD) return null\n\t\tconst usdAmount = (adxAmount.toNumber(10) / ADX_MULTIPLIER) * prices.USD\n\t\treturn `${usdAmount.toFixed(2)} USD`\n\t}\n\n\tconst bondStatus = bond => {\n\t\tif (bond.status === \"UnbondRequested\") {\n\t\t\tconst willUnlock = bond.willUnlock.getTime()\n\t\t\tconst now = Date.now()\n\t\t\tif (willUnlock > now) {\n\t\t\t\tconst days = Math.ceil((willUnlock - now) / 86400000)\n\t\t\t\treturn `Can unbond in ${days} days`\n\t\t\t} else {\n\t\t\t\treturn \"Can unbond\"\n\t\t\t}\n\t\t}\n\t\treturn bond.status\n\t}\n\n\tconst renderBondRow = bond => {\n\t\tconst pool = POOLS.find(x => x.id === bond.poolId)\n\t\tconst poolLabel = pool ? pool.label : bond.poolId\n\t\treturn (\n\t\t\t<TableRow key={getBondId(bond)}>\n\t\t\t\t<TableCell>{formatADX(bond.amount)} ADX</TableCell>\n\t\t\t\t<TableCell align=\"right\">0.00 DAI</TableCell>\n\t\t\t\t<TableCell align=\"right\">{poolLabel}</TableCell>\n\t\t\t\t<TableCell align=\"right\">{bondStatus(bond)}</TableCell>\n\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t{bond.status === \"Active\" ? (\n\t\t\t\t\t\t<Button color=\"primary\" onClick={() => onRequestUnbond(bond)}>\n\t\t\t\t\t\t\tRequest Unbond\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={bond.willUnlock.getTime() > Date.now()}\n\t\t\t\t\t\t\tonClick={() => onUnbond(bond)}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUnbond\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t)\n\t}\n\n\tconst headerCellStyle = { fontWeight: \"bold\" }\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tstyle={{\n\t\t\t\tpadding: themeMUI.spacing(4),\n\t\t\t\tmaxWidth: \"1200px\",\n\t\t\t\tmargin: \"auto\"\n\t\t\t}}\n\t\t>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t{StatsCard({\n\t\t\t\t\tloaded: stats.loaded,\n\t\t\t\t\ttitle: \"Total ADX staked\",\n\t\t\t\t\textra: inUSD(stats.totalStake),\n\t\t\t\t\tsubtitle: formatADX(stats.totalStake) + \" ADX\"\n\t\t\t\t})}\n\t\t\t</Grid>\n\n\t\t\t<Grid item xs={3}>\n\t\t\t\t{StatsCard({\n\t\t\t\t\tloaded: stats.loaded,\n\t\t\t\t\ttitle: \"Your total active stake\",\n\t\t\t\t\textra: inUSD(userTotalStake),\n\t\t\t\t\tsubtitle: formatADX(userTotalStake) + \" ADX\"\n\t\t\t\t})}\n\t\t\t</Grid>\n\n\t\t\t<Grid item xs={3}>\n\t\t\t\t{StatsCard({\n\t\t\t\t\tloaded: stats.loaded,\n\t\t\t\t\ttitle: \"Your balance\",\n\t\t\t\t\tsubtitle: stats.userBalance\n\t\t\t\t\t\t? formatADX(stats.userBalance) + \" ADX\"\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\textra: inUSD(stats.userBalance)\n\t\t\t\t})}\n\t\t\t</Grid>\n\n\t\t\t<Grid item xs={3}>\n\t\t\t\t{StatsCard({\n\t\t\t\t\tloaded: stats.loaded,\n\t\t\t\t\t// @TODO rewards\n\t\t\t\t\ttitle: \"Your total reward\",\n\t\t\t\t\textra: \"0.00 USD\",\n\t\t\t\t\tsubtitle: \"0.00 DAI\"\n\t\t\t\t})}\n\t\t\t</Grid>\n\n\t\t\t{/*<Grid item xs={12}>\n\t\t\t// TODO information about \"reward are not launched yet blabla\"\n\t\t\t</Grid>*/}\n\n\t\t\t<TableContainer xs={12}>\n\t\t\t\t<Table\n\t\t\t\t\taria-label=\"Bonds table\"\n\t\t\t\t\tstyle={{ marginTop: themeMUI.spacing(2) }}\n\t\t\t\t>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell style={headerCellStyle}>Bond amount</TableCell>\n\t\t\t\t\t\t\t<TableCell style={headerCellStyle} align=\"right\">\n\t\t\t\t\t\t\t\tReward to collect\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell style={headerCellStyle} align=\"right\">\n\t\t\t\t\t\t\t\tPool\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell style={headerCellStyle} align=\"right\">\n\t\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell style={headerCellStyle} align=\"right\">\n\t\t\t\t\t\t\t\tActions\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>{(stats.userBonds || []).map(renderBondRow)}</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</Grid>\n\t)\n}\n\nexport default function App() {\n\tconst [isNewBondOpen, setNewBondOpen] = useState(false)\n\tconst [toUnbond, setToUnbond] = React.useState(null)\n\tconst [stats, setStats] = useState(EMPTY_STATS)\n\n\tconst refreshStats = () =>\n\t\tloadStats()\n\t\t\t.then(setStats)\n\t\t\t.catch(e => console.error(\"loadStats\", e))\n\tuseEffect(() => {\n\t\trefreshStats()\n\t\tconst intvl = setInterval(refreshStats, REFRESH_INTVL)\n\t\treturn () => clearInterval(intvl)\n\t}, [])\n\n\tconst onNewBond = bond => {\n\t\tsetNewBondOpen(false)\n\t\tcreateNewBond(stats, bond)\n\t}\n\t// @TODO: move to a separate method\n\tconst makeUnbondFn = isUnbond => async ({ amount, poolId, nonce }) => {\n\t\t// @TODO: what if there's no window.web3\n\t\tconst provider = new Web3Provider(window.web3.currentProvider)\n\t\tconst signer = provider.getSigner()\n\t\tconst staking = new Contract(ADDR_STAKING, StakingABI, signer)\n\t\tconst fn = isUnbond\n\t\t\t? staking.unbond.bind(staking)\n\t\t\t: staking.requestUnbond.bind(staking)\n\t\tconst tx = await fn([amount, poolId, nonce || ZERO])\n\t\tawait tx.wait()\n\t}\n\tconst onRequestUnbond = makeUnbondFn(false)\n\tconst onUnbond = makeUnbondFn(true)\n\n\treturn (\n\t\t<MuiThemeProvider theme={themeMUI}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<img height=\"40vh\" src={logo} alt=\"logo\"></img>\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tdisabled={!stats.loaded}\n\t\t\t\t\t\tonClick={() => setNewBondOpen(true)}\n\t\t\t\t\t\tvariant=\"extended\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tstyle={{ position: \"absolute\", right: \"5%\", top: \"50%\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddIcon style={{ margin: themeMUI.spacing(1) }} />\n\t\t\t\t\t\tStake your ADX\n\t\t\t\t\t</Fab>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t{// if we set onRequestUnbond to setToUnbond, we will get the confirmation dialog\n\t\t\tDashboard({ stats, onRequestUnbond: setToUnbond, onUnbond })}\n\n\t\t\t{UnbondConfirmationDialog({\n\t\t\t\ttoUnbond,\n\t\t\t\tonDeny: () => setToUnbond(null),\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tif (toUnbond) onRequestUnbond(toUnbond)\n\t\t\t\t\tsetToUnbond(null)\n\t\t\t\t}\n\t\t\t})}\n\n\t\t\t<Modal\n\t\t\t\topen={isNewBondOpen}\n\t\t\t\tonClose={() => setNewBondOpen(false)}\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tjustifyContent: \"center\"\n\t\t\t\t}}\n\t\t\t\tcloseAfterTransition\n\t\t\t\tBackdropComponent={Backdrop}\n\t\t\t\tBackdropProps={{\n\t\t\t\t\ttimeout: 300\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Fade in={isNewBondOpen}>\n\t\t\t\t\t{NewBondForm({\n\t\t\t\t\t\tpools: POOLS.filter(x => x.selectable),\n\t\t\t\t\t\tmaxAmount: stats.userBalance,\n\t\t\t\t\t\tonNewBond\n\t\t\t\t\t})}\n\t\t\t\t</Fade>\n\t\t\t</Modal>\n\t\t</MuiThemeProvider>\n\t)\n}\n\nfunction formatADX(num) {\n\treturn (num.toNumber(10) / ADX_MULTIPLIER).toFixed(2)\n}\n\nfunction getBondId({ owner, amount, poolId, nonce }) {\n\treturn keccak256(\n\t\tdefaultAbiCoder.encode(\n\t\t\t[\"address\", \"address\", \"uint\", \"bytes32\", \"uint\"],\n\t\t\t[ADDR_STAKING, owner, amount, poolId, nonce]\n\t\t)\n\t)\n}\n\nasync function loadStats() {\n\tconst [totalStake, userStats] = await Promise.all([\n\t\tToken.balanceOf(ADDR_STAKING),\n\t\tloadUserStats()\n\t])\n\treturn { totalStake, ...userStats }\n}\n\nasync function loadUserStats() {\n\tif (!window.web3)\n\t\treturn {\n\t\t\tloaded: true,\n\t\t\tuserBonds: [],\n\t\t\tuserBalance: ZERO\n\t\t}\n\n\tconst provider = new Web3Provider(window.web3.currentProvider)\n\tconst signer = provider.getSigner()\n\tconst addr = await signer.getAddress()\n\n\tconst [bal, logs] = await Promise.all([\n\t\tToken.balanceOf(addr),\n\t\tprovider.getLogs({\n\t\t\tfromBlock: 0,\n\t\t\taddress: ADDR_STAKING,\n\t\t\ttopics: [null, hexZeroPad(addr, 32)]\n\t\t})\n\t])\n\tconst userBonds = logs.reduce((bonds, log) => {\n\t\tconst topic = log.topics[0]\n\t\tconst evs = Staking.interface.events\n\t\tif (topic === evs.LogBond.topic) {\n\t\t\tconst vals = Staking.interface.parseLog(log).values\n\t\t\tconst { owner, amount, poolId, nonce } = vals\n\t\t\tconst bond = { owner, amount, poolId, nonce }\n\t\t\tbonds.push({ id: getBondId(bond), status: \"Active\", ...bond })\n\t\t} else if (topic === evs.LogUnbondRequested.topic) {\n\t\t\t// NOTE: assuming that .find() will return something is safe, as long as the logs are properly ordered\n\t\t\tconst { bondId, willUnlock } = Staking.interface.parseLog(log).values\n\t\t\tconst bond = bonds.find(({ id }) => id === bondId)\n\t\t\tbond.status = \"UnbondRequested\"\n\t\t\tbond.willUnlock = new Date(willUnlock * 1000)\n\t\t} else if (topic === evs.LogUnbonded.topic) {\n\t\t\tconst { bondId } = Staking.interface.parseLog(log).values\n\t\t\tbonds.find(({ id }) => id === bondId).status = \"Unbonded\"\n\t\t}\n\t\treturn bonds\n\t}, [])\n\treturn {\n\t\tloaded: true,\n\t\tuserBonds,\n\t\tuserBalance: bal\n\t}\n}\n\n// @TODO handle exceptions\nasync function createNewBond(stats, { amount, poolId, nonce }) {\n\t// @TODO handle errors in some way\n\tif (!poolId) return\n\tif (!stats.userBalance) return\n\tif (amount.gt(stats.userBalance)) return\n\t// @TODO: what if there's no window.web3\n\tconst provider = new Web3Provider(window.web3.currentProvider)\n\tconst signer = provider.getSigner()\n\tconst stakingWithSigner = new Contract(ADDR_STAKING, StakingABI, signer)\n\tconst tokenWithSigner = new Contract(ADDR_ADX, ERC20ABI, signer)\n\tconst allowance = await tokenWithSigner.allowance(\n\t\tawait signer.getAddress(),\n\t\tADDR_STAKING\n\t)\n\tlet txns = []\n\t// Hardcoded gas limit to avoid doing estimateGas - if we do gasEstimate, it will fail on txns[1] cause it depends on txns[0].\n\t// which isn't going to be mined at the time of signing\n\tif (!allowance.eq(amount)) {\n\t\tif (allowance.gt(ZERO)) {\n\t\t\ttxns.push(\n\t\t\t\tawait tokenWithSigner.approve(ADDR_STAKING, ZERO, { gasLimit: 80000 })\n\t\t\t)\n\t\t}\n\t\ttxns.push(\n\t\t\tawait tokenWithSigner.approve(ADDR_STAKING, amount, {\n\t\t\t\tgasLimit: 80000\n\t\t\t})\n\t\t)\n\t}\n\ttxns.push(\n\t\tawait stakingWithSigner.addBond([amount, poolId, nonce || ZERO], {\n\t\t\tgasLimit: 110000\n\t\t})\n\t)\n\t// const receipts = await Promise.all(txns.map(tx => tx.wait()))\n\tawait Promise.all(txns.map(tx => tx.wait()))\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}